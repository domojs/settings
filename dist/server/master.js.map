{"version":3,"sources":["master.ts"],"names":[],"mappings":"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","file":"master.js","sourcesContent":["// import 'jquery';\r\nimport * as di from 'akala-corere';\r\nimport * as debug from 'debug';\r\nimport { EventEmitter } from 'events';\r\nimport * as $ from 'underscore';\r\nimport * as fs from 'fs';\r\nimport { Settings } from './settings';\r\nvar log = debug('domojs:settings');\r\n// log('settings');\r\nvar doNotWrite = false;\r\n\r\n@di.factory(\"settings\")\r\nclass SettingsFactory extends EventEmitter implements di.IFactory<Settings> {\r\n    constructor()\r\n    {\r\n        log('factory constructor');\r\n        super();\r\n\r\n        var config = {};\r\n        if (fs.existsSync('./settings.json'))\r\n        {\r\n            doNotWrite = true;\r\n            var data = fs.readFileSync('./settings.json', 'utf8');\r\n            this.all = JSON.parse(data);\r\n            if (config)\r\n                $.each(config, this.set.bind(this));\r\n            doNotWrite = false;\r\n        }\r\n    }\r\n\r\n    public all: any;\r\n\r\n    set(name: string, value: any)\r\n    {\r\n        if (name.indexOf('.') > 0)\r\n        {\r\n            var firstName = name.substring(0, name.indexOf('.'));\r\n            if (typeof (this.all[firstName]) == 'undefined')\r\n                this.all[firstName] = {};\r\n            this.all[firstName][name.substring(firstName.length + 1)] = value;\r\n            this.emit(firstName, this.all[firstName]);\r\n        }\r\n        else\r\n            this.all[name] = value;\r\n        console.log('updated settings');\r\n        console.log(this.all);\r\n        this.emit(name, value);\r\n        if (!doNotWrite)\r\n            fs.writeFileSync('./settings.json', JSON.stringify(this.all));\r\n    }\r\n\r\n    get(name: string)\r\n    {\r\n        if (name.indexOf('.') > 0)\r\n        {\r\n            var firstName = name.substring(0, name.indexOf('.'));\r\n            if (typeof (this.all[firstName]) == 'undefined')\r\n                this.all[firstName] = {};\r\n            return this.all[firstName][name.substring(firstName.length + 1)];\r\n        }\r\n        else\r\n            return this.all[name];\r\n    }\r\n\r\n    build()\r\n    {\r\n        log('building instance');\r\n        var self = this;\r\n        return function (name: string, value?: any)\r\n        {\r\n            if (arguments.length == 1)\r\n                return self.get(name);\r\n            else\r\n                self.set(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"],"sourceRoot":"settings/src/server"}